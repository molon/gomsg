// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/molon/gomsg/internal/pb/mqpb/mq.proto

/*
Package mqpb is a generated protocol buffer package.

It is generated from these files:
	github.com/molon/gomsg/internal/pb/mqpb/mq.proto

It has these top-level messages:
	ToUid
	KickoutSession
	SendOfflineToSession
	Notification
	Payload
*/
package mqpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import msgpb "github.com/molon/gomsg/pb/msgpb"
import pushpb "github.com/molon/gomsg/pb/pushpb"
import errorpb "github.com/molon/gomsg/pb/errorpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 发给uid的常规消息
type ToUid struct {
	// 接收目标
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// 平台配置，置空则表示全发送
	PlatformConfig *pushpb.PlatformConfig `protobuf:"bytes,11,opt,name=platform_config,json=platformConfig" json:"platform_config,omitempty"`
	// 消息列表
	Msgs []*msgpb.Message `protobuf:"bytes,21,rep,name=msgs" json:"msgs,omitempty"`
	// 保留给一些特殊业务使用的项目
	Reserve *google_protobuf.Any `protobuf:"bytes,88,opt,name=reserve" json:"reserve,omitempty"`
}

func (m *ToUid) Reset()                    { *m = ToUid{} }
func (m *ToUid) String() string            { return proto.CompactTextString(m) }
func (*ToUid) ProtoMessage()               {}
func (*ToUid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ToUid) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ToUid) GetPlatformConfig() *pushpb.PlatformConfig {
	if m != nil {
		return m.PlatformConfig
	}
	return nil
}

func (m *ToUid) GetMsgs() []*msgpb.Message {
	if m != nil {
		return m.Msgs
	}
	return nil
}

func (m *ToUid) GetReserve() *google_protobuf.Any {
	if m != nil {
		return m.Reserve
	}
	return nil
}

// 踢出某会话
type KickoutSession struct {
	// 接收目标
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// 接收会话
	Sid string `protobuf:"bytes,2,opt,name=sid" json:"sid,omitempty"`
	// 踢出原因
	Code errorpb.Code `protobuf:"varint,3,opt,name=code,enum=errorpb.Code" json:"code,omitempty"`
}

func (m *KickoutSession) Reset()                    { *m = KickoutSession{} }
func (m *KickoutSession) String() string            { return proto.CompactTextString(m) }
func (*KickoutSession) ProtoMessage()               {}
func (*KickoutSession) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *KickoutSession) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *KickoutSession) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *KickoutSession) GetCode() errorpb.Code {
	if m != nil {
		return m.Code
	}
	return errorpb.Code_NONE
}

// 下发离线消息
type SendOfflineToSession struct {
	// 接收目标
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// 接收会话
	Sid string `protobuf:"bytes,2,opt,name=sid" json:"sid,omitempty"`
}

func (m *SendOfflineToSession) Reset()                    { *m = SendOfflineToSession{} }
func (m *SendOfflineToSession) String() string            { return proto.CompactTextString(m) }
func (*SendOfflineToSession) ProtoMessage()               {}
func (*SendOfflineToSession) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SendOfflineToSession) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *SendOfflineToSession) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

// 向某用户的某平台发通知提醒消息
type Notification struct {
	// 接收目标
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// 接收平台
	Platform string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	// 消息内容
	Msg *msgpb.Message `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *Notification) Reset()                    { *m = Notification{} }
func (m *Notification) String() string            { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()               {}
func (*Notification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Notification) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Notification) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Notification) GetMsg() *msgpb.Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

// mq消息wrap
type Payload struct {
	Seq           string                      `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Timestamp     *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	RetryCount    int64                       `protobuf:"varint,3,opt,name=retry_count,json=retryCount" json:"retry_count,omitempty"`
	LastAttemptAt *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=last_attempt_at,json=lastAttemptAt" json:"last_attempt_at,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Payload_ToUid
	//	*Payload_KickoutSession
	//	*Payload_SendOfflineToSession
	//	*Payload_Notification
	Body isPayload_Body `protobuf_oneof:"Body"`
}

func (m *Payload) Reset()                    { *m = Payload{} }
func (m *Payload) String() string            { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()               {}
func (*Payload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isPayload_Body interface{ isPayload_Body() }

type Payload_ToUid struct {
	ToUid *ToUid `protobuf:"bytes,11,opt,name=to_uid,json=toUid,oneof"`
}
type Payload_KickoutSession struct {
	KickoutSession *KickoutSession `protobuf:"bytes,12,opt,name=kickout_session,json=kickoutSession,oneof"`
}
type Payload_SendOfflineToSession struct {
	SendOfflineToSession *SendOfflineToSession `protobuf:"bytes,13,opt,name=send_offline_to_session,json=sendOfflineToSession,oneof"`
}
type Payload_Notification struct {
	Notification *Notification `protobuf:"bytes,14,opt,name=notification,oneof"`
}

func (*Payload_ToUid) isPayload_Body()                {}
func (*Payload_KickoutSession) isPayload_Body()       {}
func (*Payload_SendOfflineToSession) isPayload_Body() {}
func (*Payload_Notification) isPayload_Body()         {}

func (m *Payload) GetBody() isPayload_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Payload) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *Payload) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Payload) GetRetryCount() int64 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func (m *Payload) GetLastAttemptAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LastAttemptAt
	}
	return nil
}

func (m *Payload) GetToUid() *ToUid {
	if x, ok := m.GetBody().(*Payload_ToUid); ok {
		return x.ToUid
	}
	return nil
}

func (m *Payload) GetKickoutSession() *KickoutSession {
	if x, ok := m.GetBody().(*Payload_KickoutSession); ok {
		return x.KickoutSession
	}
	return nil
}

func (m *Payload) GetSendOfflineToSession() *SendOfflineToSession {
	if x, ok := m.GetBody().(*Payload_SendOfflineToSession); ok {
		return x.SendOfflineToSession
	}
	return nil
}

func (m *Payload) GetNotification() *Notification {
	if x, ok := m.GetBody().(*Payload_Notification); ok {
		return x.Notification
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Payload) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Payload_OneofMarshaler, _Payload_OneofUnmarshaler, _Payload_OneofSizer, []interface{}{
		(*Payload_ToUid)(nil),
		(*Payload_KickoutSession)(nil),
		(*Payload_SendOfflineToSession)(nil),
		(*Payload_Notification)(nil),
	}
}

func _Payload_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Payload)
	// Body
	switch x := m.Body.(type) {
	case *Payload_ToUid:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ToUid); err != nil {
			return err
		}
	case *Payload_KickoutSession:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.KickoutSession); err != nil {
			return err
		}
	case *Payload_SendOfflineToSession:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SendOfflineToSession); err != nil {
			return err
		}
	case *Payload_Notification:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Notification); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Payload.Body has unexpected type %T", x)
	}
	return nil
}

func _Payload_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Payload)
	switch tag {
	case 11: // Body.to_uid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ToUid)
		err := b.DecodeMessage(msg)
		m.Body = &Payload_ToUid{msg}
		return true, err
	case 12: // Body.kickout_session
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KickoutSession)
		err := b.DecodeMessage(msg)
		m.Body = &Payload_KickoutSession{msg}
		return true, err
	case 13: // Body.send_offline_to_session
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SendOfflineToSession)
		err := b.DecodeMessage(msg)
		m.Body = &Payload_SendOfflineToSession{msg}
		return true, err
	case 14: // Body.notification
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Notification)
		err := b.DecodeMessage(msg)
		m.Body = &Payload_Notification{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Payload_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Payload)
	// Body
	switch x := m.Body.(type) {
	case *Payload_ToUid:
		s := proto.Size(x.ToUid)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Payload_KickoutSession:
		s := proto.Size(x.KickoutSession)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Payload_SendOfflineToSession:
		s := proto.Size(x.SendOfflineToSession)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Payload_Notification:
		s := proto.Size(x.Notification)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ToUid)(nil), "mqpb.ToUid")
	proto.RegisterType((*KickoutSession)(nil), "mqpb.KickoutSession")
	proto.RegisterType((*SendOfflineToSession)(nil), "mqpb.SendOfflineToSession")
	proto.RegisterType((*Notification)(nil), "mqpb.Notification")
	proto.RegisterType((*Payload)(nil), "mqpb.Payload")
}

func init() { proto.RegisterFile("github.com/molon/gomsg/internal/pb/mqpb/mq.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcf, 0x8f, 0xd2, 0x40,
	0x14, 0x06, 0xcb, 0xee, 0xba, 0x53, 0x28, 0xeb, 0x04, 0xb5, 0x72, 0x59, 0x6c, 0x4c, 0xc4, 0xcb,
	0xd4, 0xe0, 0x65, 0xe3, 0x65, 0x03, 0x5c, 0x48, 0x8c, 0xba, 0x29, 0x18, 0x8d, 0x07, 0x9b, 0xfe,
	0x98, 0x76, 0x27, 0xb4, 0xf3, 0x4a, 0x67, 0x6a, 0xc2, 0x3f, 0xe5, 0xd9, 0x3f, 0xcf, 0x74, 0xa6,
	0xe0, 0xe2, 0x92, 0xa8, 0x17, 0xca, 0xbc, 0xf7, 0xbd, 0xaf, 0x6f, 0xbe, 0xef, 0x4b, 0xd1, 0xeb,
	0x94, 0xc9, 0xdb, 0x2a, 0x24, 0x11, 0xe4, 0x6e, 0x0e, 0x19, 0x70, 0x37, 0x85, 0x5c, 0xa4, 0x2e,
	0xe3, 0x92, 0x96, 0x3c, 0xc8, 0xdc, 0x22, 0x74, 0xf3, 0x8d, 0xfa, 0x21, 0x45, 0x09, 0x12, 0x70,
	0xa7, 0x3e, 0x0e, 0x9f, 0xa5, 0x00, 0x69, 0x46, 0x5d, 0x55, 0x0b, 0xab, 0xc4, 0x0d, 0xf8, 0x56,
	0x03, 0x86, 0x97, 0x7f, 0xb6, 0x24, 0xcb, 0xa9, 0x90, 0x41, 0x5e, 0x34, 0x80, 0x7e, 0x2e, 0xd2,
	0x9a, 0x51, 0xa4, 0x4d, 0xe1, 0x51, 0x51, 0x89, 0xdb, 0x22, 0x74, 0xeb, 0x47, 0x53, 0xc2, 0xb4,
	0x2c, 0xa1, 0x2c, 0x42, 0x37, 0x82, 0x98, 0xea, 0x9a, 0xf3, 0xa3, 0x8d, 0x4e, 0x56, 0xf0, 0x89,
	0xc5, 0xf8, 0x02, 0x19, 0x15, 0x8b, 0xed, 0xf6, 0xa8, 0x3d, 0x3e, 0xf7, 0xea, 0xbf, 0xf8, 0x1a,
	0xf5, 0x8b, 0x2c, 0x90, 0x09, 0x94, 0xb9, 0x1f, 0x01, 0x4f, 0x58, 0x6a, 0x9b, 0xa3, 0xf6, 0xd8,
	0x9c, 0x3c, 0x21, 0x9a, 0x9c, 0xdc, 0x34, 0xed, 0xb9, 0xea, 0x7a, 0x56, 0x71, 0x70, 0xc6, 0x0e,
	0xea, 0xe4, 0x22, 0x15, 0xf6, 0xe3, 0x91, 0x31, 0x36, 0x27, 0x16, 0x51, 0x3b, 0x92, 0xf7, 0x54,
	0x88, 0x20, 0xa5, 0x9e, 0xea, 0x61, 0x82, 0xce, 0x4a, 0x2a, 0x68, 0xf9, 0x9d, 0xda, 0x5f, 0x14,
	0xf9, 0x80, 0xe8, 0xbb, 0x92, 0xdd, 0x5d, 0xc9, 0x94, 0x6f, 0xbd, 0x1d, 0xc8, 0xf9, 0x8c, 0xac,
	0x77, 0x2c, 0x5a, 0x43, 0x25, 0x97, 0x54, 0x08, 0x06, 0xfc, 0xc8, 0xe2, 0x17, 0xc8, 0x10, 0x2c,
	0xb6, 0x1f, 0xe8, 0x8a, 0x60, 0x31, 0x7e, 0x8e, 0x3a, 0xf5, 0xa5, 0x6d, 0x63, 0xd4, 0x1e, 0x5b,
	0x93, 0x1e, 0x69, 0x94, 0x20, 0x73, 0x88, 0xa9, 0xa7, 0x5a, 0xce, 0x5b, 0x34, 0x58, 0x52, 0x1e,
	0x7f, 0x4c, 0x92, 0x8c, 0x71, 0xba, 0x82, 0xff, 0xa0, 0x77, 0xbe, 0xa1, 0xee, 0x07, 0x90, 0x2c,
	0x61, 0x51, 0x20, 0x8f, 0xcf, 0x0c, 0xd1, 0xc3, 0x9d, 0x38, 0xcd, 0xe0, 0xfe, 0x8c, 0x47, 0xc8,
	0xc8, 0x45, 0xaa, 0x76, 0xbb, 0xaf, 0x52, 0xdd, 0x72, 0x7e, 0x1a, 0xe8, 0xec, 0x26, 0xd8, 0x66,
	0x10, 0xe8, 0xb7, 0xd3, 0xcd, 0x8e, 0x5b, 0xd0, 0x0d, 0xbe, 0x42, 0xe7, 0xfb, 0x38, 0x28, 0x72,
	0x73, 0x32, 0xbc, 0x27, 0xe2, 0x6a, 0x87, 0xf0, 0x7e, 0x83, 0xf1, 0x25, 0x32, 0x4b, 0x2a, 0xcb,
	0xad, 0x1f, 0x41, 0xc5, 0xa5, 0xda, 0xc0, 0xf0, 0x90, 0x2a, 0xcd, 0xeb, 0x0a, 0x9e, 0xa1, 0x7e,
	0x16, 0x08, 0xe9, 0x07, 0x52, 0xd2, 0xbc, 0xa8, 0x9f, 0x76, 0xe7, 0xaf, 0x2f, 0xe8, 0xd5, 0x23,
	0x53, 0x3d, 0x31, 0x95, 0xf8, 0x05, 0x3a, 0x95, 0xe0, 0xd7, 0x7a, 0xe8, 0xf4, 0x98, 0xa4, 0x4e,
	0x3b, 0x51, 0xa9, 0x5b, 0xb4, 0xbc, 0x13, 0xa9, 0xe2, 0x77, 0x8d, 0xfa, 0x6b, 0xed, 0xab, 0x2f,
	0xb4, 0xf2, 0x76, 0xb7, 0xc9, 0x83, 0x82, 0x1f, 0x9a, 0xbe, 0x68, 0x79, 0xd6, 0xfa, 0x30, 0x06,
	0x4b, 0xf4, 0x54, 0x50, 0x1e, 0xfb, 0xa0, 0x0d, 0xf4, 0x25, 0xec, 0x89, 0x7a, 0xcd, 0xca, 0x8a,
	0xe8, 0x98, 0xc9, 0x8b, 0x96, 0x37, 0x10, 0xc7, 0xcc, 0xbf, 0x42, 0x5d, 0x7e, 0xc7, 0x58, 0xdb,
	0x52, 0x4c, 0x58, 0x33, 0xdd, 0xb5, 0x7c, 0xd1, 0xf2, 0x0e, 0x90, 0xb3, 0x53, 0xd4, 0x99, 0x41,
	0xbc, 0x9d, 0xbd, 0xfa, 0xfa, 0xf2, 0x1f, 0x3f, 0x07, 0xe1, 0xa9, 0xd2, 0xf2, 0xcd, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x45, 0x26, 0x48, 0x1e, 0x40, 0x04, 0x00, 0x00,
}
