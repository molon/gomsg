// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/molon/gomsg/internal/pb/boatpb/boat.proto

/*
Package boatpb is a generated protocol buffer package.

It is generated from these files:
	github.com/molon/gomsg/internal/pb/boatpb/boat.proto

It has these top-level messages:
	PushMessagesRequest
	BoardcastRoomRequest
	KickoutRequest
*/
package boatpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/duration"
import errorpb "github.com/molon/gomsg/pb/errorpb"
import msgpb "github.com/molon/gomsg/pb/msgpb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 下发消息请求
type PushMessagesRequest struct {
	// 会话id
	Sid string `protobuf:"bytes,1,opt,name=sid" json:"sid,omitempty"`
	// ack等待时间
	AckWait *google_protobuf2.Duration `protobuf:"bytes,2,opt,name=ack_wait,json=ackWait" json:"ack_wait,omitempty"`
	// 一堆消息
	Msgs []*msgpb.Message `protobuf:"bytes,3,rep,name=msgs" json:"msgs,omitempty"`
}

func (m *PushMessagesRequest) Reset()                    { *m = PushMessagesRequest{} }
func (m *PushMessagesRequest) String() string            { return proto.CompactTextString(m) }
func (*PushMessagesRequest) ProtoMessage()               {}
func (*PushMessagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PushMessagesRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *PushMessagesRequest) GetAckWait() *google_protobuf2.Duration {
	if m != nil {
		return m.AckWait
	}
	return nil
}

func (m *PushMessagesRequest) GetMsgs() []*msgpb.Message {
	if m != nil {
		return m.Msgs
	}
	return nil
}

// 根据房间名称广播消息，此种消息不得ack，不得离线，不得通知
type BoardcastRoomRequest struct {
	// 房间名称
	Room string `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	// 消息唯一标识
	Seq string `protobuf:"bytes,2,opt,name=seq" json:"seq,omitempty"`
	// 消息体
	Body *google_protobuf.Any `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
}

func (m *BoardcastRoomRequest) Reset()                    { *m = BoardcastRoomRequest{} }
func (m *BoardcastRoomRequest) String() string            { return proto.CompactTextString(m) }
func (*BoardcastRoomRequest) ProtoMessage()               {}
func (*BoardcastRoomRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BoardcastRoomRequest) GetRoom() string {
	if m != nil {
		return m.Room
	}
	return ""
}

func (m *BoardcastRoomRequest) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *BoardcastRoomRequest) GetBody() *google_protobuf.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

type KickoutRequest struct {
	// 会话id
	Sid string `protobuf:"bytes,1,opt,name=sid" json:"sid,omitempty"`
	// 踢出原因
	Code errorpb.Code `protobuf:"varint,2,opt,name=code,enum=errorpb.Code" json:"code,omitempty"`
}

func (m *KickoutRequest) Reset()                    { *m = KickoutRequest{} }
func (m *KickoutRequest) String() string            { return proto.CompactTextString(m) }
func (*KickoutRequest) ProtoMessage()               {}
func (*KickoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KickoutRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *KickoutRequest) GetCode() errorpb.Code {
	if m != nil {
		return m.Code
	}
	return errorpb.Code_NONE
}

func init() {
	proto.RegisterType((*PushMessagesRequest)(nil), "boatpb.PushMessagesRequest")
	proto.RegisterType((*BoardcastRoomRequest)(nil), "boatpb.BoardcastRoomRequest")
	proto.RegisterType((*KickoutRequest)(nil), "boatpb.KickoutRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Boat service

type BoatClient interface {
	// 向某一个会话id下发消息一堆消息
	PushMessages(ctx context.Context, in *PushMessagesRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// 广播消息
	BoardcastRoom(ctx context.Context, in *BoardcastRoomRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// 踢出会话
	Kickout(ctx context.Context, in *KickoutRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type boatClient struct {
	cc *grpc.ClientConn
}

func NewBoatClient(cc *grpc.ClientConn) BoatClient {
	return &boatClient{cc}
}

func (c *boatClient) PushMessages(ctx context.Context, in *PushMessagesRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/boatpb.Boat/PushMessages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boatClient) BoardcastRoom(ctx context.Context, in *BoardcastRoomRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/boatpb.Boat/BoardcastRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boatClient) Kickout(ctx context.Context, in *KickoutRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/boatpb.Boat/Kickout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Boat service

type BoatServer interface {
	// 向某一个会话id下发消息一堆消息
	PushMessages(context.Context, *PushMessagesRequest) (*google_protobuf1.Empty, error)
	// 广播消息
	BoardcastRoom(context.Context, *BoardcastRoomRequest) (*google_protobuf1.Empty, error)
	// 踢出会话
	Kickout(context.Context, *KickoutRequest) (*google_protobuf1.Empty, error)
}

func RegisterBoatServer(s *grpc.Server, srv BoatServer) {
	s.RegisterService(&_Boat_serviceDesc, srv)
}

func _Boat_PushMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoatServer).PushMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boatpb.Boat/PushMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoatServer).PushMessages(ctx, req.(*PushMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Boat_BoardcastRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardcastRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoatServer).BoardcastRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boatpb.Boat/BoardcastRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoatServer).BoardcastRoom(ctx, req.(*BoardcastRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Boat_Kickout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoatServer).Kickout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boatpb.Boat/Kickout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoatServer).Kickout(ctx, req.(*KickoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Boat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "boatpb.Boat",
	HandlerType: (*BoatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushMessages",
			Handler:    _Boat_PushMessages_Handler,
		},
		{
			MethodName: "BoardcastRoom",
			Handler:    _Boat_BoardcastRoom_Handler,
		},
		{
			MethodName: "Kickout",
			Handler:    _Boat_Kickout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/molon/gomsg/internal/pb/boatpb/boat.proto",
}

func init() {
	proto.RegisterFile("github.com/molon/gomsg/internal/pb/boatpb/boat.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0xab, 0xd4, 0x30,
	0x14, 0xc5, 0xad, 0x2d, 0xef, 0x69, 0x9e, 0x6f, 0x94, 0xf8, 0x78, 0x74, 0x66, 0x44, 0xc6, 0xae,
	0x2a, 0x42, 0x02, 0x75, 0x76, 0xae, 0x1c, 0x1d, 0x5c, 0x88, 0x20, 0xdd, 0x08, 0x6e, 0x24, 0x69,
	0x33, 0x99, 0x32, 0x93, 0xde, 0x4e, 0x92, 0x22, 0xb3, 0xf4, 0x33, 0xfa, 0x85, 0xa4, 0x69, 0x0a,
	0xce, 0x3f, 0x71, 0xd5, 0x70, 0x4f, 0x72, 0xef, 0xef, 0x9c, 0x5b, 0x34, 0x97, 0x95, 0x5d, 0xb7,
	0x9c, 0x14, 0xa0, 0xa8, 0x82, 0x2d, 0xd4, 0x54, 0x82, 0x32, 0x92, 0x56, 0xb5, 0x15, 0xba, 0x66,
	0x5b, 0xda, 0x70, 0xca, 0x81, 0x59, 0xff, 0x21, 0x8d, 0x06, 0x0b, 0xf8, 0xaa, 0x2f, 0x4d, 0xc6,
	0x12, 0x40, 0x6e, 0x05, 0x75, 0x55, 0xde, 0xae, 0x28, 0xab, 0xf7, 0xfd, 0x95, 0xc9, 0xf4, 0x58,
	0x12, 0xaa, 0xb1, 0x83, 0xf8, 0xf2, 0x58, 0x2c, 0x5b, 0xcd, 0x6c, 0x05, 0xb5, 0xd7, 0xb1, 0xd0,
	0x1a, 0x74, 0xc3, 0x69, 0x01, 0xa5, 0xf0, 0xb5, 0xa7, 0xca, 0xc8, 0x86, 0x53, 0x65, 0x64, 0x5f,
	0x48, 0x7e, 0x05, 0xe8, 0xf9, 0xd7, 0xd6, 0xac, 0xbf, 0x08, 0x63, 0x98, 0x14, 0x26, 0x17, 0xbb,
	0x56, 0x18, 0x8b, 0x9f, 0xa1, 0xd0, 0x54, 0x65, 0x1c, 0xcc, 0x82, 0xf4, 0x71, 0xde, 0x1d, 0xf1,
	0x1c, 0x3d, 0x62, 0xc5, 0xe6, 0xc7, 0x4f, 0x56, 0xd9, 0xf8, 0xe1, 0x2c, 0x48, 0x6f, 0xb2, 0x31,
	0xe9, 0x09, 0xc8, 0x40, 0x40, 0x3e, 0x7a, 0x82, 0xfc, 0x9a, 0x15, 0x9b, 0x6f, 0xac, 0xb2, 0x38,
	0x41, 0x91, 0x32, 0xd2, 0xc4, 0xe1, 0x2c, 0x4c, 0x6f, 0xb2, 0x11, 0x71, 0xf3, 0x89, 0x9f, 0x96,
	0x3b, 0x2d, 0x59, 0xa1, 0xbb, 0x05, 0x30, 0x5d, 0x16, 0xcc, 0xd8, 0x1c, 0x40, 0x0d, 0x0c, 0x18,
	0x45, 0x1a, 0x40, 0x79, 0x08, 0x77, 0x76, 0x5c, 0x62, 0xe7, 0x00, 0x3a, 0x2e, 0xb1, 0xc3, 0x29,
	0x8a, 0x38, 0x94, 0xfb, 0x38, 0x74, 0x4c, 0x77, 0x27, 0x4c, 0xef, 0xeb, 0x7d, 0xee, 0x6e, 0x24,
	0x4b, 0x34, 0xfa, 0x5c, 0x15, 0x1b, 0x68, 0xed, 0x65, 0x97, 0xaf, 0x50, 0xd4, 0xc5, 0xe5, 0x06,
	0x8c, 0xb2, 0x5b, 0xe2, 0x33, 0x24, 0x1f, 0xa0, 0x14, 0xb9, 0x93, 0xb2, 0xdf, 0x01, 0x8a, 0x16,
	0xc0, 0x2c, 0x5e, 0xa2, 0x27, 0x7f, 0x47, 0x87, 0xa7, 0xa4, 0xdf, 0x28, 0x39, 0x13, 0xe8, 0xe4,
	0xfe, 0x04, 0x6c, 0xd9, 0xed, 0x32, 0x79, 0x80, 0x3f, 0xa1, 0xdb, 0x03, 0xfb, 0xf8, 0xc5, 0xd0,
	0xe7, 0x5c, 0x2a, 0xff, 0x68, 0xf4, 0x0e, 0x5d, 0x7b, 0x7f, 0xf8, 0x7e, 0x68, 0x71, 0x68, 0xf8,
	0xf2, 0xe3, 0xc5, 0x9b, 0xef, 0xaf, 0xff, 0xfb, 0x2f, 0xe6, 0x57, 0xee, 0xf9, 0xdb, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x09, 0x97, 0xcb, 0x70, 0xf9, 0x02, 0x00, 0x00,
}
